{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"tinyconfig","text":"<p>[!WARNING] work in progress</p>"},{"location":"api/","title":"API reference","text":""},{"location":"api/#tinyconfig","title":"tinyconfig","text":""},{"location":"api/#tinyconfig.BaseConfig","title":"BaseConfig  <code>dataclass</code>","text":""},{"location":"api/#tinyconfig.BaseConfig.to_dict","title":"to_dict","text":"<pre><code>to_dict() -&gt; dict[str, Any]\n</code></pre> <p>Convert the dataclass instance to a dictionary.</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict[str, Any]</code> <p>A dictionary representation of the dataclass instance.</p>"},{"location":"api/#tinyconfig.BaseConfig.from_dict","title":"from_dict  <code>classmethod</code>","text":"<pre><code>from_dict(data: dict[str, Any]) -&gt; T\n</code></pre> <p>Create a dataclass instance from a dictionary.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>dict</code> <p>A dictionary containing the data to populate the dataclass.</p> required <p>Returns:</p> Name Type Description <code>BaseConfig</code> <code>T</code> <p>An instance of the dataclass.</p>"},{"location":"api/#tinyconfig.BaseConfig.to_toml","title":"to_toml","text":"<pre><code>to_toml() -&gt; str\n</code></pre> <p>Convert the dataclass instance to a TOML string.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>A TOML string representation of the dataclass instance.</p>"},{"location":"api/#tinyconfig.BaseConfig.from_toml","title":"from_toml  <code>classmethod</code>","text":"<pre><code>from_toml(toml_str: str) -&gt; T\n</code></pre> <p>Create a dataclass instance from a TOML string.</p> <p>Parameters:</p> Name Type Description Default <code>toml_str</code> <code>str</code> <p>A TOML string containing the data to populate the dataclass.</p> required <p>Returns:</p> Name Type Description <code>BaseConfig</code> <code>T</code> <p>An instance of the dataclass.</p>"},{"location":"api/#tinyconfig.BaseConfig.to_json","title":"to_json","text":"<pre><code>to_json() -&gt; str\n</code></pre> <p>Convert the dataclass instance to a JSON string.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>A JSON string representation of the dataclass instance.</p>"},{"location":"api/#tinyconfig.BaseConfig.from_json","title":"from_json  <code>classmethod</code>","text":"<pre><code>from_json(json_str: str) -&gt; T\n</code></pre> <p>Create a dataclass instance from a JSON string.</p> <p>Parameters:</p> Name Type Description Default <code>json_str</code> <code>str</code> <p>A JSON string containing the data to populate the dataclass.</p> required <p>Returns:</p> Name Type Description <code>BaseConfig</code> <code>T</code> <p>An instance of the dataclass.</p>"},{"location":"api/#tinyconfig.BaseConfig.to_yaml","title":"to_yaml","text":"<pre><code>to_yaml() -&gt; str\n</code></pre> <p>Convert the dataclass instance to a YAML string.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>A YAML string representation of the dataclass instance.</p>"},{"location":"api/#tinyconfig.BaseConfig.from_yaml","title":"from_yaml  <code>classmethod</code>","text":"<pre><code>from_yaml(yaml_str: str) -&gt; T\n</code></pre> <p>Create a dataclass instance from a YAML string.</p> <p>Parameters:</p> Name Type Description Default <code>yaml_str</code> <code>str</code> <p>A YAML string containing the data to populate the dataclass.</p> required <p>Returns:</p> Name Type Description <code>BaseConfig</code> <code>T</code> <p>An instance of the dataclass.</p>"},{"location":"api/#tinyconfig.base","title":"base","text":""},{"location":"api/#tinyconfig.base.BaseConfig","title":"BaseConfig  <code>dataclass</code>","text":""},{"location":"api/#tinyconfig.base.BaseConfig.to_dict","title":"to_dict","text":"<pre><code>to_dict() -&gt; dict[str, Any]\n</code></pre> <p>Convert the dataclass instance to a dictionary.</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict[str, Any]</code> <p>A dictionary representation of the dataclass instance.</p>"},{"location":"api/#tinyconfig.base.BaseConfig.from_dict","title":"from_dict  <code>classmethod</code>","text":"<pre><code>from_dict(data: dict[str, Any]) -&gt; T\n</code></pre> <p>Create a dataclass instance from a dictionary.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>dict</code> <p>A dictionary containing the data to populate the dataclass.</p> required <p>Returns:</p> Name Type Description <code>BaseConfig</code> <code>T</code> <p>An instance of the dataclass.</p>"},{"location":"api/#tinyconfig.base.BaseConfig.to_toml","title":"to_toml","text":"<pre><code>to_toml() -&gt; str\n</code></pre> <p>Convert the dataclass instance to a TOML string.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>A TOML string representation of the dataclass instance.</p>"},{"location":"api/#tinyconfig.base.BaseConfig.from_toml","title":"from_toml  <code>classmethod</code>","text":"<pre><code>from_toml(toml_str: str) -&gt; T\n</code></pre> <p>Create a dataclass instance from a TOML string.</p> <p>Parameters:</p> Name Type Description Default <code>toml_str</code> <code>str</code> <p>A TOML string containing the data to populate the dataclass.</p> required <p>Returns:</p> Name Type Description <code>BaseConfig</code> <code>T</code> <p>An instance of the dataclass.</p>"},{"location":"api/#tinyconfig.base.BaseConfig.to_json","title":"to_json","text":"<pre><code>to_json() -&gt; str\n</code></pre> <p>Convert the dataclass instance to a JSON string.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>A JSON string representation of the dataclass instance.</p>"},{"location":"api/#tinyconfig.base.BaseConfig.from_json","title":"from_json  <code>classmethod</code>","text":"<pre><code>from_json(json_str: str) -&gt; T\n</code></pre> <p>Create a dataclass instance from a JSON string.</p> <p>Parameters:</p> Name Type Description Default <code>json_str</code> <code>str</code> <p>A JSON string containing the data to populate the dataclass.</p> required <p>Returns:</p> Name Type Description <code>BaseConfig</code> <code>T</code> <p>An instance of the dataclass.</p>"},{"location":"api/#tinyconfig.base.BaseConfig.to_yaml","title":"to_yaml","text":"<pre><code>to_yaml() -&gt; str\n</code></pre> <p>Convert the dataclass instance to a YAML string.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>A YAML string representation of the dataclass instance.</p>"},{"location":"api/#tinyconfig.base.BaseConfig.from_yaml","title":"from_yaml  <code>classmethod</code>","text":"<pre><code>from_yaml(yaml_str: str) -&gt; T\n</code></pre> <p>Create a dataclass instance from a YAML string.</p> <p>Parameters:</p> Name Type Description Default <code>yaml_str</code> <code>str</code> <p>A YAML string containing the data to populate the dataclass.</p> required <p>Returns:</p> Name Type Description <code>BaseConfig</code> <code>T</code> <p>An instance of the dataclass.</p>"},{"location":"changelog/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.</p>"},{"location":"changelog/#unreleased","title":"[Unreleased]","text":""}]}